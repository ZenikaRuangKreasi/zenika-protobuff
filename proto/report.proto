syntax = "proto3";

package proto;

option go_package = "github.com/ZenikaRuangKreasi/zenika-protobuff/gen/proto;proto";

import "google/api/annotations.proto";
import "proto/order.proto";

service ReportService {
  rpc MonthlyTransactionReport(MonthlyTransactionReportRequest) returns (MonthlyTransactionReportResponse) {
    option (google.api.http) = {  
      get: "/api/v1/report/monthly-transaction"
    };
  }
  rpc TransactionDateTimeReport(TransactionDateTimeReportRequest) returns (TransactionDateTimeReportResponse) {
    option (google.api.http) = {  
      get: "/api/v1/report/transaction-datetime"
    };
  }
  rpc CompareOrderTransaction(CompareOrderTransactionRequest) returns (CompareOrderTransactionResponse) {
    option (google.api.http) = {  
      get: "/api/v1/report/compare-order-transaction"
    };
  }
  rpc RecapOrderTransaction(ListOrdersRequest) returns (RecapOrderTransactionResponse) {
    option (google.api.http) = {  
      get: "/api/v1/report/recap-order-transaction"
    };
  }
}
message RecapOrderTransactionResponse {
  string message = 1;
  RecapOrderTransactionData data = 2;
}
message RecapOrderTransactionData {
  float totalSalesAmount = 1;
  float totalOrder = 2;
  float productCount = 3;
  float transactionVoid = 4;
}   
message CompareOrderTransactionRequest {
  string dateRangeOne = 1;
  string dateRangeTwo = 2;
}

message CompareOrderTransactionResponse {
  string message = 1;
  CompareOrderTransactionData data = 2;
}

message CompareOrderTransactionData {
  RangeData rangeOne = 1;
  RangeData rangeTwo = 2;
  repeated string xaxisLabel = 3;
  repeated string xaxisLabelView = 4;
}

message RangeData {
  repeated float countsSalesAmount = 1;
  repeated float countsOrder = 2;
}

message TransactionDateTimeReportRequest {
  string date=1;
}
message TransactionDateTimeReportResponse {
  string message = 1;
  TransactionDateTimeReportData data = 2;
}
message TransactionDateTimeReportData {
  repeated float amounts = 1;
}

message MonthlyTransactionReportRequest {
  string dateRange=1;
}
message MonthlyTransactionReportResponse {
  string message = 1;
  ReportDataMonthly data = 2;
}

message ReportDataMonthly {
  repeated float countsSalesAmount = 1;
  repeated float countsOrder = 2;
  repeated float accumulatedCountsOrder = 3;
  repeated float accumulatedCountsSalesAmount = 4;
  repeated string xaxisLabel = 5;

}